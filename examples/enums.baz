enum Optional {
	Some(int);
	None;

	fn do_something(a: int): int {
		return 12;
	}

	fn get_this(): Optional {
		return this;
	}
}

fn main(): void {
	let tree: Optional = Optional::Some(5);
	let other: Optional = Optional::None;

	let smth: int = other.do_something(1);
	println(smth);

	let tree2: Optional = tree.get_this();

	match (tree) {
		Optional::Some(bound): {
			print("Some: ");
			println(bound);
		},
		Optional::None: {
			println("None");
		}
	}
}
